name: Deploy .NET Azure Functions

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Consente di eseguire manualmente il workflow

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/PetCatalog.Functions'  # Path al progetto Functions
  DOTNET_VERSION: '9.0.x'  # Versione .NET usata dal progetto
  AZURE_FUNCTIONAPP_NAME: 'func-petcatalog-prod'  # Nome della Function App
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET Core SDK ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore NuGet packages
      run: dotnet restore
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Build project
      run: dotnet build --configuration Release --no-restore
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Run tests
      run: |
        dotnet test tests/PetCatalog.UnitTests --configuration Release --no-build --logger trx --results-directory TestResults
        dotnet test tests/PetCatalog.IntegrationTests --configuration Release --no-build --logger trx --results-directory TestResults

    - name: Publish application
      run: dotnet publish --configuration Release --output ./output --no-build
      working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: |
          {
            "clientId": "${{ env.ARM_CLIENT_ID }}",
            "clientSecret": "${{ env.ARM_CLIENT_SECRET }}",
            "subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID }}",
            "tenantId": "${{ env.ARM_TENANT_ID }}"
          }

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output
        scm-do-build-during-deployment: false  # We're building locally
        enable-oryx-build: false  # We're using pre-built package

    - name: Azure logout
      run: |
        az logout
